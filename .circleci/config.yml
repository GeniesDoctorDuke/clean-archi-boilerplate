## Set Environment Variables
# EXPO_CLI_PASSWORD
# EXPO_USERNAME
# NETLIFY_AUTH_TOKEN
# NETLIFY_SITE_ID

version: 2

publish: &publish
  docker:
    - image: circleci/node:10.16.0
  steps:
    - checkout

    - restore_cache:
        keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - v1-dependencies-

    - run:
        name: Installing dependencies
        command: yarn install

    - run:
        name: Setup env
        command: yarn env:$ENV

    - run:
        name: Check typescript
        command: yarn compile

    # - run:
    #     name: Check tests
    #     command: yarn test

    - run:
        name: Install expo-cli
        command: sudo yarn global add expo-cli

    - run:
        name: Build
        command: yarn build

    - run:
        name: Login into Expo
        command: npx expo login --non-interactive -u $EXPO_USERNAME

    - run:
        name: Publish to Expo
        command: |
          expo_release_channel=""
          yarn env:$ENV
          case "$ENV" in
            "prod") expo_release_channel='default'
            ;;
            "dev") expo_release_channel=`echo $CIRCLE_BRANCH | sed 's/\//_/g'`
            ;;
          esac
          cd ./apps/mobile
          npx expo optimize
          npx expo publish --quiet --release-channel $expo_release_channel
          cd ../..
    - run:
        name: Install netlify-cli
        command: sudo yarn global add netlify-cli

    - run:
        name: Deploy to Netlify
        command: npx netlify deploy --dir=./apps/web/public -p

    - save_cache:
        paths:
          - node_modules
          - ~/.cache/yarn
        key: v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

checkdeps: &checkdeps
  docker:
    - image: circleci/node:10.16.0
  steps:
    - checkout
    - run:
        name: Install npm-check-updates
        command: sudo yarn global add npm-check-updates
    - run:
        name: Check deps
        command: ncu -e 2 --dep prod

jobs:
  publish_dev:
    environment:
      ENV: dev
    <<: *publish

  publish_prod:
    environment:
      ENV: prod
    <<: *publish

  publish_gitflow:
    environment:
      ENV: dev
    <<: *publish

  check_dependencies:
    environment:
      ENV: dev
    <<: *checkdeps

workflows:
  version: 2
  build_test_publish_wkfs:
    jobs:
      - publish_dev:
          filters:
            branches:
              only: develop
      - publish_prod:
          filters:
            branches:
              only: master
      - publish_gitflow:
          filters:
            branches:
              only: /^feature\/.*$|^release\/.*$|^hotfix\/.*$/
# nightly:
#   triggers:
#     - schedule:
#         cron: '0 0 * * *'
#         filters:
#           branches:
#             only:
#               - dev
#   jobs:
#     - check_dependencies

# notify:
#   webhooks:
#     - url: https://xc-ci-webhook.now.sh/